{"version":3,"sources":["components/FeedbackWidget/FeedbackOption/FeedbackOptions.module.css","components/FeedbackWidget/Notification/Notification.module.css","App.module.css","components/FeedbackWidget/Statistics/Statistics.js","components/FeedbackWidget/Section/Section.js","components/FeedbackWidget/FeedbackOption/FeedbackOptions.js","components/FeedbackWidget/Notification/Notification.js","App.js","index.js","components/FeedbackWidget/Section/Section.module.css","components/FeedbackWidget/Statistics/Statistics.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","Styles","list","Section","title","children","section","h1","FeedbackOptions","options","onLeaveFeedback","map","option","index","type","button","style","backgroundColor","onClick","Notification","message","container","App","state","totalFeedbacks","percent","Math","round","setState","this","Component","propTypes","PropTypes","string","isRequired","arrayOf","func","number","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,kC,mBCA1ED,EAAOC,QAAU,CAAC,UAAY,kC,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,yB,uJCwBfC,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIC,UAAWC,IAAOC,KAAtB,UACE,6BACE,0CAAaP,EAAb,SAEF,6BACE,6CAAgBC,OAElB,6BACE,yCAAYC,OAEd,6BACE,2CAAcC,OAEhB,6BACE,iEAA6BC,EAA7B,e,gBCPOI,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASL,UAAWC,IAAOK,QAA3B,UACE,oBAAIN,UAAWC,IAAOM,GAAtB,SAA2BH,IAC1BC,M,iBCcQG,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACX,wBAEEC,KAAK,SACLd,UAAWC,IAAOc,OAClBC,MAAO,CAAEC,gBAAiBL,GAC1BM,QAAS,kBAAMR,EAAgBE,IALjC,SAOGA,GANIC,S,iBCGAM,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,qBAAKpB,UAAWC,IAAOoB,UAAvB,SACE,+BAAOD,O,iBCEPE,E,4MACJC,MAAQ,CACN5B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP2B,eAAiB,WACf,OAAO,EAAKD,MAAM5B,KAAO,EAAK4B,MAAM3B,QAAU,EAAK2B,MAAM1B,K,EAG3DE,mBAAqB,WACnB,IAAM0B,EAA6B,IAAlB,EAAKF,MAAM5B,KAAc,EAAK6B,iBAC/C,OAAOE,KAAKC,MAAMF,I,EAGpBf,gBAAkB,SAAAE,GAChB,EAAKgB,SAAL,eACGhB,EAAS,EAAKW,MAAMX,GAAU,K,4CAInC,WAAU,IAAD,OACP,OACE,qBAAKZ,UAAWC,IAAOoB,UAAvB,SACE,eAAC,EAAD,CAASjB,MAAM,wBAAf,UACE,cAAC,EAAD,CACEK,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB,SAAAE,GAAM,OAAI,EAAKF,gBAAgBE,MAElD,4CACCiB,KAAKL,iBAAmB,EACvB,cAAC,EAAD,CACE7B,KAAMkC,KAAKN,MAAM5B,KACjBC,QAASiC,KAAKN,MAAM3B,QACpBC,IAAKgC,KAAKN,MAAM1B,IAChBC,MAAO+B,KAAKL,iBACZzB,mBAAoB8B,KAAK9B,uBAG3B,cAAC,EAAD,CAAcqB,QAAQ,+B,GAxChBU,aAgDlB3B,EAAQ4B,UAAY,CAClB3B,MAAO4B,IAAUC,OAAOC,YAG1B1B,EAAgBuB,UAAY,CAC1BtB,QAASuB,IAAUG,QAAQH,IAAUC,OAAOC,YAAYA,WACxDxB,gBAAiBsB,IAAUI,KAAKF,YAGlCxC,EAAWqC,UAAY,CACrBpC,KAAMqC,IAAUK,OAAOH,WACvBtC,QAASoC,IAAUK,OAAOH,WAC1BrC,IAAKmC,IAAUK,OAAOH,WACtBpC,MAAOkC,IAAUK,OAAOH,WACxBnC,mBAAoBiC,IAAUK,OAAOH,YAGvCf,EAAaY,UAAY,CACvBX,QAASY,IAAUC,OAAOC,YAGbZ,QCxEfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BlD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,GAAK,sB,kBCA1DD,EAAOC,QAAU,CAAC,KAAO,4B","file":"static/js/main.b0150068.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__2l-MZ\",\"button\":\"FeedbackOptions_button__1vCGo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__13w59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1KevM\"};","import React from 'react';\r\nimport Styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul className={Styles.list}>\r\n      <li>\r\n        <span>Good: {good} </span>\r\n      </li>\r\n      <li>\r\n        <span>Neutral: {neutral}</span>\r\n      </li>\r\n      <li>\r\n        <span>Bad: {bad}</span>\r\n      </li>\r\n      <li>\r\n        <span>Total: {total}</span>\r\n      </li>\r\n      <li>\r\n        <span>Positive feedback: {`${positivePercentage} %`}</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport Styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={Styles.section}>\r\n      <h1 className={Styles.h1}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport Styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map((option, index) => (\r\n        <button\r\n          key={index}\r\n          type=\"button\"\r\n          className={Styles.button}\r\n          style={{ backgroundColor: option }}\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport Styles from './Notification.module.css'\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div className={Styles.container}>\r\n      <span>{message}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Statistics from './components/FeedbackWidget/Statistics';\nimport Section from './components/FeedbackWidget/Section';\nimport FeedbackOptions from './components/FeedbackWidget/FeedbackOption';\nimport Notification from './components/FeedbackWidget/Notification';\nimport Styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  totalFeedbacks = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  positivePercentage = () => {\n    const percent = (this.state.good * 100) / this.totalFeedbacks();\n    return Math.round(percent);\n  };\n\n  onLeaveFeedback = option => {\n    this.setState({\n      [option]: this.state[option] + 1,\n    });\n  };\n\n  render() {\n    return (\n      <div className={Styles.container}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={option => this.onLeaveFeedback(option)}\n          />\n          <h2>Statistics</h2>\n          {this.totalFeedbacks() > 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.totalFeedbacks()}\n              positivePercentage={this.positivePercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2U9_O\",\"h1\":\"Section_h1__2uELu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1Bb5m\"};"],"sourceRoot":""}